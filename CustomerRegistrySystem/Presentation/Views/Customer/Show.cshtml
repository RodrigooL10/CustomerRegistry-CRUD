@model List<CustomerRegistrySystem.Domain.Customer>

@using DevExtreme.AspNet.Data
@using DevExtreme.AspNet.Mvc

<h1>Clientes</h1>

<div id="gridCustomers"></div>


<div class="modal fade" id="deleteCustomerModal" tabindex="-1" role="dialog" aria-labelledby="deleteCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteCustomerModalLabel">Confirmar Exclusão de Cliente</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Tem certeza de que deseja excluir este cliente? Esta ação não pode ser desfeita.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteCustomer">Excluir</button>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="deleteAddressModal" tabindex="-1" role="dialog" aria-labelledby="deleteAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteAddressModalLabel">Confirmar Exclusão de Endereço</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Tem certeza de que deseja excluir este endereço? Esta ação não pode ser desfeita.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteAddress">Excluir</button>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="successModal" tabindex="-1" role="dialog" aria-labelledby="successModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="successModalLabel">Operação bem-sucedida</h5>
                <button type="button" class="close" data-dismiss="modal" onclick="location.reload()" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Excluído com sucesso!
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="location.reload()">OK</button>
            </div>
        </div>
    </div>
</div>




@section Scripts {
    <script>
        $(function () {
            //Serializa os dados do modelo para uso no Javascript
            const data = @Html.Raw(Json.Serialize(Model));

            //Obtém a lista de clientes
            const customers = data.$values;

            // Variável para armazenar o ID do cliente a ser deletado
            let customerToDelete = null;

            // Variável para armazenar o ID do endereço a ser deletado
            let addressToDelete = null;


            // Configuração do DataGrid para exibir os clientes
            $("#gridCustomers").dxDataGrid({
                dataSource: customers,
                columns: [
                    { dataField: "Name", caption: "Nome" },
                    { dataField: "CPF", caption: "CPF" },
                    { dataField: "Email", caption: "Email" },
                    { dataField: "Phone", caption: "Telefone" },
                    { dataField: "DateOfBirth", caption: "Data de Nasc.", dataType: "date", format: "dd-MM-yyyy" },
                    {
                        dataField: "Gender",
                        caption: "Gênero",
                        calculateDisplayValue: function (data) {
                            switch (data.Gender) {
                                //Formata a exibição do Gênero
                                case 0: return "Masculino";
                                case 1: return "Feminino";
                                case 2: return "Outro";
                                default: return "Desconhecido";
                            }
                        }
                    },
                    {
                        //Cpçina de botões para ações
                        type: "buttons",
                        buttons: [
                            {
                                text: "Editar Cliente",
                                onClick: function (e) {
                                    //Obtém o id cliente
                                    const id = e.row.data.Id;

                                    //Redireciona para página de Edição
                                    window.location.href = `/Customer/Edit/${id}`;
                                },
                                cssClass: "btn btn-primary mx-1 button-custom text-white text-decoration-none"
                            },
                            {
                                text: "Deletar Cliente",
                                onClick: function (e) {
                                    // Armazena o ID do cliente a ser deletado
                                    customerToDelete = e.row.data.Id;

                                    // Exibe o modal de confirmação
                                    $('#deleteCustomerModal').modal('show'); 
                                },
                                cssClass: "btn btn-danger mx-1 button-custom text-white text-decoration-none"
                            }
                        ]
                    }
                ],
                paging: { pageSize: 10 },
                height: 700,
                sorting: { mode: "multiple" },
                searchPanel: { visible: true, placeholder: "Pesquisar..." },
                filterRow: { visible: true, applyFilter: "auto" },
                masterDetail: { //Tabela de endereços
                    enabled: true,
                    template: function (container, options) {
                        //Obt[em os dados do cliente]
                        var customer = options.data;

                        // Cria o grid para exibir os endereços do cliente, se houver
                        if (customer.Addresses && customer.Addresses.$values && Array.isArray(customer.Addresses.$values)) {
                            $("<div>")
                                .dxDataGrid({
                                    dataSource: customer.Addresses.$values,
                                    columns: [
                                        { dataField: "Street", caption: "Rua" },
                                        { dataField: "Number", caption: "Número" },
                                        { dataField: "City", caption: "Cidade" },
                                        { dataField: "State", caption: "Estado" },
                                        { dataField: "CEP", caption: "CEP" },
                                        { dataField: "Complement", caption: "Complemento" },
                                        {
                                            dataField: "Type",
                                            caption: "Tipo de Endereço",
                                            calculateDisplayValue: function (data) {
                                                switch (data.Type) {
                                                    //Fpr,ata a exibção do tipo de endereço
                                                    case 0: return "Fiscal";
                                                    case 1: return "Cobrança";
                                                    case 2: return "Entrega";
                                                    default: return "Desconhecido";
                                                }
                                            }
                                        },
                                        {
                                            type: "buttons",
                                            buttons: [
                                                {
                                                    text: "Editar Endereço",
                                                    onClick: function (e) {
                                                        //Obtém o ID do endereço
                                                        const addressId = e.row.data.Id;

                                                        //Redireciona para a página de Edição
                                                        window.location.href = `/Customer/EditAddress/${addressId}`;
                                                    },
                                                    cssClass: "btn btn-primary mx-1 button-custom text-white text-decoration-none"
                                                },
                                                {
                                                    text: "Excluir Endereço",
                                                    onClick: function (e) {
                                                        // Armazena o ID do endereço a ser deletado
                                                        const addressId = e.row.data.Id;
                                                        addressToDelete = addressId;

                                                        // Exibe o modal de confirmação
                                                        $('#deleteAddressModal').modal('show'); 
                                                    },
                                                    cssClass: "btn btn-danger mx-1 button-custom text-white text-decoration-none"
                                                }
                                            ]
                                        }
                                    ],
                                    showBorders: true,
                                    height: 180,
                                    paging: { pageSize: 5 },
                                    sorting: { mode: "multiple" },
                                    rowAlternationEnabled: true
                                }).appendTo(container);
                        } else {
                            //Mensagem quando não há endereços disponíveis
                            $("<div>Não há endereços disponíveis</div>").appendTo(container);
                        }

                        // Adiciona uma linha personalizada no final com o botão "Adicionar Endereço"
                        $("<div class='add-address-row' style='margin-top: 10px;'>")
                            .append(
                                $("<button>")
                                    .text("Adicionar Novo Endereço")
                                    .addClass("btn btn-success")
                                    .on("click", function () {
                                        // Armazena o ID do cliente no sessionStorage
                                        sessionStorage.setItem("customerId", customer.Id);

                                        // Redireciona para a página de adição de endereço, passando o ID do cliente
                                        window.location.href = `/Customer/AddAddress/${customer.Id}`;
                                    })
                            )
                            .appendTo(container);
                    }
                },
                showBorders: true,
                columnAutoWidth: true,
                rowAlternationEnabled: true,
                headerFilter: {
                    visible: true
                },
                summary: {
                    totalItems: [{
                        column: "Id",
                        summaryType: "count",
                        displayFormat: "Total: {0}"
                    }]
                }
            });

            // Quando o usuário confirma a exclusão do cliente
            $('#confirmDeleteCustomer').click(function () {
                if (customerToDelete) {
                    $.ajax({
                        url: `/Customer/Delete/${customerToDelete}`,
                        type: "POST",
                        success: function () {
                            $('#deleteCustomerModal').modal('hide');
                            $('#successModal').modal('show'); 
                        },
                        error: function () {
                            alert("Erro ao deletar o cliente");
                        }
                    });
                }
            });

            // Quando o usuário confirma a exclusão do endereço
            $('#confirmDeleteAddress').click(function () {
                if (addressToDelete) {
                    $.ajax({
                        url: `/Customer/DeleteAddress/${addressToDelete}`,
                        type: "POST",
                        success: function () {
                            $('#deleteAddressModal').modal('hide');
                            $('#successModal').modal('show'); 
                        },
                        error: function () {
                            alert("Erro ao deletar o endereço");
                        }
                    });
                }
            });

            // Quando o modal de sucesso é fechado, recarrega a página
            $('#successModal').on('hidden.bs.modal', function () {
                location.reload();
            });
        });
    </script>
}

<style>
    /* Estilo geral do grid */
    .dx-datagrid {
        font-family: Arial, sans-serif;
        border-radius: 8px; 
        overflow: hidden;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    /* Estilo dos cabeçalhos do grid */
    .dx-datagrid-header-row {
        background-color: #007bff; 
        color: #ffffff; 
        font-weight: bold; 
        text-align: center;
    }

    /* Estilo das células do grid */
    .dx-datagrid-content {
        background-color: #ffffff; 
    }

        /* Estilo das linhas alternadas do grid */
        .dx-datagrid-content tr:nth-child(even) {
            background-color: #f0f8ff; 
        }

        .dx-datagrid-content tr:nth-child(odd) {
            background-color: #ffffff; 
        }

        /* Efeito hover nas linhas */
        .dx-datagrid-content tr:hover {
            background-color: #e0f7fa; 
            transition: background-color 0.3s ease;
        }

    /* Estilo para linhas de detalhes do master-detail */
    .dx-datagrid-master-detail {
        background-color: #d0d3d4; 
    }

    /* Estilo dos botões */
    .button-custom {
        padding: 8px 12px;
        border-radius: 5px;
        font-size: 14px;
        transition: background-color 0.3s ease; 
    }

    .btn-primary {
        background-color: #007bff;
        border: none; 
    }

    .btn-danger {
        background-color: #dc3545; 
        border: none; 
    }

    /* Efeito hover para botões */
    .btn-primary:hover {
        background-color: #0056b3; 
    }

    .btn-danger:hover {
        background-color: #c82333; 
    }

    /* Estilo do botão "Adicionar Novo Endereço" */
    .add-address-row button {
        margin-top: 10px;
        padding: 8px 12px;
        border-radius: 5px;
        background-color: #28a745; 
        color: white; 
        border: none;
        transition: background-color 0.3s ease; 
    }

        /* Efeito hover para o botão "Adicionar Novo Endereço" */
        .add-address-row button:hover {
            background-color: #218838;
        }

    /* Estilos para a caixa de pesquisa e filtros */
    .dx-search-panel {
        background-color: #007bff;
        border-radius: 5px; 
        padding: 10px; 
        margin-bottom: 10px; 
    }

        .dx-search-panel input {
            border: none; 
            border-radius: 4px; 
            padding: 8px;
            width: 100%; 
        }

            .dx-search-panel input:focus {
                outline: none;
                box-shadow: 0 0 5px rgba(0, 123, 255, 0.5); 
            }
</style>

